-provide(:title, t('.textbook-page-title', textbook_title: @textbook.name) )

.full-textbook-display
  %h1= @textbook.name
  .full-textbook-info
    %p.full-textbook-description= @textbook.additional_info
    - unless @textbook.year_published.nil?
      %p.full-textbook-year= @textbook.year_published
    %p.full.textbook-level= @textbook.level
    - unless @textbook.current?
      %p.full-textbook-obsolete (obsolete)

  .textbook-page-listing
    %ol.textbook-page-list
      - @pages.each do |page|
        %li
          .textbook-page
            %span.page-number= link_to page.page, page, class: "textbook-link"
            %span.page-description= markdown(page.description)
            %span.page-tags= link_to page.tag.name, page.tag, class: "tag-link"
            - if policy(@textbook).update?
              %span.textbook-page-controls
                %span= link_to "Edit", edit_textbook_page_path(page), class: "comment-control-link"
                %span= link_to "Delete", page, method: :delete, data: { confirm: "Are you sure you wanna delete this page?" }, class: "comment-control-link"
          .textbook-page-linked-activities

  - if policy(@textbook).edit?
    %p Add a new page quickly:
    = render 'textbook_pages/compact_form'
    %p= link_to "Add pages manually", new_textbook_page_path

    %ul.general-controls
      %li= link_to "Edit", edit_textbook_path(@textbook)
      %li= link_to "Delete", @textbook, method: :delete, data: { confirm: "Delete this textbook?" }
